//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

#include "TextDevice.h"

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

TextDevice::TextDevice(QIODevice* internal) :
    m_Internal(internal)
{
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

bool TextDevice::open(OpenMode mode)
{
    if (!QIODevice::open(mode))
    {
        return false;
    }


    return true;
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

void TextDevice::close()
{
    QIODevice::close();
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

qint64 TextDevice::pos() const
{
    return QIODevice::pos();
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

qint64 TextDevice::size() const
{
    return QIODevice::size();
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

bool TextDevice::seek(qint64 pos)
{
    return QIODevice::seek(pos);
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

bool TextDevice::atEnd() const
{
    return QIODevice::atEnd();
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

bool TextDevice::reset()
{
    return QIODevice::reset();
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

qint64 TextDevice::bytesAvailable() const
{
    return QIODevice::bytesAvailable();
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

qint64 TextDevice::bytesToWrite() const
{
    //return QIODevice::bytesToWrite();
    return 0;
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

qint64 TextDevice::readData(char *data, qint64 maxlen)
{
    //return QIODevice::readData(data, maxlen);
    Q_UNUSED(data)
    Q_UNUSED(maxlen)
    return 0;
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------

qint64 TextDevice::writeData(const char *data, qint64 len)
{
    //return QIODevice::writeData(data, len);
    Q_UNUSED(data)
    Q_UNUSED(len)
    return 0;
}

//----------------------------------------------------------------------
//
//----------------------------------------------------------------------
